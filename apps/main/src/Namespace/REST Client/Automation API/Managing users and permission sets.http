@clientid = ClientIdTest
@clientsecret = secret
@scope = https://api.businesscentral.dynamics.com/.default
@tenant = TenantIdTest
@environmentName = Sandbox1
@aPIPublisher = ciellos
@aPIGroup = salesOrderApi
@aPIVersion = v1.0
@baseAPIUrl = {{baseUrl}}/v2.0/{{environmentName}}/api/{{aPIPublisher}}/{{aPIGroup}}/{{aPIVersion}}
@entitySetName = salesOrders
@userSecurityId = 
@userPermissionId = 

###########################################################################
#    ____      _                                   _        _              
#   / ___| ___| |_    __ _  ___ ___ ___  ___ ___  | |_ ___ | | _____ _ __  
#  | |  _ / _ \ __|  / _` |/ __/ __/ _ \/ __/ __| | __/ _ \| |/ / _ \ '_ \ 
#  | |_| |  __/ |_  | (_| | (_| (_|  __/\__ \__ \ | || (_) |   <  __/ | | |
#   \____|\___|\__|  \__,_|\___\___\___||___/___/  \__\___/|_|\_\___|_| |_|
#
###########################################################################
# @name tokenrequest
POST https://login.microsoftonline.com/{{tenant}}/oauth2/v2.0/token
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id={{clientid}}
&client_secret={{clientsecret}}
&scope={{scope}}
###
@token = {{tokenrequest.response.body.access_token}}
###
@baseUrl = https://api.businesscentral.dynamics.com
##############################################################################
### GET $metadata
# @name $metadata
GET  {{baseUrl}}/api/v2.0/
Authorization: Bearer {{token}}
###
#

### GET companies
# @name companies
GET  {{baseUrl}}/api/v2.0/companies
Authorization: Bearer {{token}}
#

### GET user groups
# @name userGroup
GET {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/userGroups
Authorization: Bearer {{token}}
###
#

### GET permissionSets
# @name permissionSets
GET {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/permissionSets
Authorization: Bearer {{token}}
###
#

### POST Assign user permissions and user groups
@assignUserUrl = {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/users({{userSecurityId}})/userGroupMembers
POST {{assignUserUrl}}
Authorization: Bearer {{token}}
Content-Type: application/json

{ 
    "code": "D365 EXT. ACCOUNTANT",
    "companyName" :"CRONUS USA, Inc."
}
###
#

### POST Assign permission set
@assignPermissionUrl = {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/users({{userSecurityId}})/userPermissions
POST {{assignPermissionUrl}}
Authorization: Bearer {{token}}
Content-Type: application/json

{ 
    "roleId": "SECURITY"
}
###
#

### PATCH Modifying user properties
@modifyUrl = {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/users({{userSecurityId}})/users({{userSecurityId}})
PATCH {{modifyUrl}}
If-Match: *
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "state": "Enabled",
    "expiryDate": "2035-01-01T21:03:53.444Z"
}
###
#

### DELETE Delete user permission
@deleteUrl = {{baseUrl}}/v2.0/{{environmentName}}/api/microsoft/automation/v2.0/companies({{companies.response.body.value[1].id}})/users({{userSecurityId}})/userPermissions({{userPermissionId}})
DELETE {{deleteUrl}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "state": "Enabled",
    "expiryDate": "2035-01-01T21:03:53.444Z"
}
###
#